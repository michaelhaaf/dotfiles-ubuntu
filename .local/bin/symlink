#!/bin/bash

# TODO in general: this is no longer making backups, ensure your backups are
# working

function linkDotfile {
  local source=("${1}")
  local filename="${source#$DOTFILES/}"
  local dest="${HOME}/${filename%/*}"

  echo "Verifying symlink from ${source} to ${dest}..."

  # Ignore SC2068: I want globbing of individual elements
  ! ls ${source[@]} &> /dev/null && \
    echo "Dotfile ${source} not present in dot directory. Ignoring." && return 0

  # cp -i (confirm overwrite) -f (force overwrite) -r (recursive) -s (symlink)
  # -u (update newer/missing only) -p (preserve ownership etc.) -v (verbose)
  cp -ifrsupv ${source[@]} "${dest}"
}

# TODO honestly this could be a bit better lol
# (directory and file handling could be decoupled for instance)
# e.g. error cp: target '/home/michael/.config/dunst' is not a directory

export -f linkDotfile
find "${DOTFILES}/" -maxdepth 1 -name ".*" -type f -exec bash -c 'for f; do linkDotfile "${f}"; done' _ {} +
find "${DOTFILES}/.local/bin/" -maxdepth 1 -type f -exec bash -c 'for f; do linkDotfile "${f}"; done' _ {} +
find "${DOTFILES}/.config/" -maxdepth 1 -type f -exec bash -c 'for f; do linkDotfile "${f}"; done' _ {} +
find "${DOTFILES}/vimwiki/" -maxdepth 1 -type f -exec bash -c 'for f; do linkDotfile "${f}"; done' _ {} +

linkDotfile "${DOTFILES}/.ssh/*"
find "${DOTFILES}/.config/" -maxdepth 1 -mindepth 1 -type d -exec bash -c \
  'for f; do linkDotfile "${f}/*"; done' _ {} +
find "${DOTFILES}/.local/share/flavours/base16/templates/" -maxdepth 1 -mindepth 1 -type d -exec bash -c \
  'for f; do linkDotfile "${f}/*"; done' _ {} +
